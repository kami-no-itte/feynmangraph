%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Tk Canvas Widget
%%For: Igor Musatov
%%Title: Window .3.c
%%CreationDate: Fri Feb 23 17:51:48 2001
%%BoundingBox: 0 643 242 793
%%Pages: 1
%%DocumentData: Clean7Bit
%%Orientation: Portrait
%%DocumentNeededResources: font Times-Italic
%%EndComments

%%BeginProlog
50 dict begin

% This is a standard prolog for Postscript generated by Tk's canvas
% widget.
% RCS: @(#) $Id: tkCanvPs.c,v 1.4 1998/09/22 18:57:16 stanton Exp $

% The definitions below just define all of the variables used in
% any of the procedures here.  This is needed for obscure reasons
% explained on p. 716 of the Postscript manual (Section H.2.7,
% "Initializing Variables," in the section on Encapsulated Postscript).

/baseline 0 def
/stipimage 0 def
/height 0 def
/justify 0 def
/lineLength 0 def
/spacing 0 def
/stipple 0 def
/strings 0 def
/xoffset 0 def
/yoffset 0 def
/tmpstip null def

% Define the array ISOLatin1Encoding (which specifies how characters are
% encoded for ISO-8859-1 fonts), if it isn't already present (Postscript
% level 2 is supposed to define it, but level 1 doesn't).

systemdict /ISOLatin1Encoding known not {
    /ISOLatin1Encoding [
	/space /space /space /space /space /space /space /space
	/space /space /space /space /space /space /space /space
	/space /space /space /space /space /space /space /space
	/space /space /space /space /space /space /space /space
	/space /exclam /quotedbl /numbersign /dollar /percent /ampersand
	    /quoteright
	/parenleft /parenright /asterisk /plus /comma /minus /period /slash
	/zero /one /two /three /four /five /six /seven
	/eight /nine /colon /semicolon /less /equal /greater /question
	/at /A /B /C /D /E /F /G
	/H /I /J /K /L /M /N /O
	/P /Q /R /S /T /U /V /W
	/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
	/quoteleft /a /b /c /d /e /f /g
	/h /i /j /k /l /m /n /o
	/p /q /r /s /t /u /v /w
	/x /y /z /braceleft /bar /braceright /asciitilde /space
	/space /space /space /space /space /space /space /space
	/space /space /space /space /space /space /space /space
	/dotlessi /grave /acute /circumflex /tilde /macron /breve /dotaccent
	/dieresis /space /ring /cedilla /space /hungarumlaut /ogonek /caron
	/space /exclamdown /cent /sterling /currency /yen /brokenbar /section
	/dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen
	    /registered /macron
	/degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph
	    /periodcentered
	/cedillar /onesuperior /ordmasculine /guillemotright /onequarter
	    /onehalf /threequarters /questiondown
	/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
	/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex
	    /Idieresis
	/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply
	/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn
	    /germandbls
	/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla
	/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex
	    /idieresis
	/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide
	/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn
	    /ydieresis
    ] def
} if

% font ISOEncode font
% This procedure changes the encoding of a font from the default
% Postscript encoding to ISOLatin1.  It's typically invoked just
% before invoking "setfont".  The body of this procedure comes from
% Section 5.6.1 of the Postscript book.

/ISOEncode {
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding ISOLatin1Encoding def
	currentdict
    end

    % I'm not sure why it's necessary to use "definefont" on this new
    % font, but it seems to be important; just use the name "Temporary"
    % for the font.

    /Temporary exch definefont
} bind def

% StrokeClip
%
% This procedure converts the current path into a clip area under
% the assumption of stroking.  It's a bit tricky because some Postscript
% interpreters get errors during strokepath for dashed lines.  If
% this happens then turn off dashes and try again.

/StrokeClip {
    {strokepath} stopped {
	(This Postscript printer gets limitcheck overflows when) =
	(stippling dashed lines;  lines will be printed solid instead.) =
	[] 0 setdash strokepath} if
    clip
} bind def

% desiredSize EvenPixels closestSize
%
% The procedure below is used for stippling.  Given the optimal size
% of a dot in a stipple pattern in the current user coordinate system,
% compute the closest size that is an exact multiple of the device's
% pixel size.  This allows stipple patterns to be displayed without
% aliasing effects.

/EvenPixels {
    % Compute exact number of device pixels per stipple dot.
    dup 0 matrix currentmatrix dtransform
    dup mul exch dup mul add sqrt

    % Round to an integer, make sure the number is at least 1, and compute
    % user coord distance corresponding to this.
    dup round dup 1 lt {pop 1} if
    exch div mul
} bind def

% width height string StippleFill --
%
% Given a path already set up and a clipping region generated from
% it, this procedure will fill the clipping region with a stipple
% pattern.  "String" contains a proper image description of the
% stipple pattern and "width" and "height" give its dimensions.  Each
% stipple dot is assumed to be about one unit across in the current
% user coordinate system.  This procedure trashes the graphics state.

/StippleFill {
    % The following code is needed to work around a NeWSprint bug.

    /tmpstip 1 index def

    % Change the scaling so that one user unit in user coordinates
    % corresponds to the size of one stipple dot.
    1 EvenPixels dup scale

    % Compute the bounding box occupied by the path (which is now
    % the clipping region), and round the lower coordinates down
    % to the nearest starting point for the stipple pattern.  Be
    % careful about negative numbers, since the rounding works
    % differently on them.

    pathbbox
    4 2 roll
    5 index div dup 0 lt {1 sub} if cvi 5 index mul 4 1 roll
    6 index div dup 0 lt {1 sub} if cvi 6 index mul 3 2 roll

    % Stack now: width height string y1 y2 x1 x2
    % Below is a doubly-nested for loop to iterate across this area
    % in units of the stipple pattern size, going up columns then
    % across rows, blasting out a stipple-pattern-sized rectangle at
    % each position

    6 index exch {
	2 index 5 index 3 index {
	    % Stack now: width height string y1 y2 x y

	    gsave
	    1 index exch translate
	    5 index 5 index true matrix tmpstip imagemask
	    grestore
	} for
	pop
    } for
    pop pop pop pop pop
} bind def

% -- AdjustColor --
% Given a color value already set for output by the caller, adjusts
% that value to a grayscale or mono value if requested by the CL
% variable.

/AdjustColor {
    CL 2 lt {
	currentgray
	CL 0 eq {
	    .5 lt {0} {1} ifelse
	} if
	setgray
    } if
} bind def

% x y strings spacing xoffset yoffset justify stipple DrawText --
% This procedure does all of the real work of drawing text.  The
% color and font must already have been set by the caller, and the
% following arguments must be on the stack:
%
% x, y -	Coordinates at which to draw text.
% strings -	An array of strings, one for each line of the text item,
%		in order from top to bottom.
% spacing -	Spacing between lines.
% xoffset -	Horizontal offset for text bbox relative to x and y: 0 for
%		nw/w/sw anchor, -0.5 for n/center/s, and -1.0 for ne/e/se.
% yoffset -	Vertical offset for text bbox relative to x and y: 0 for
%		nw/n/ne anchor, +0.5 for w/center/e, and +1.0 for sw/s/se.
% justify -	0 for left justification, 0.5 for center, 1 for right justify.
% stipple -	Boolean value indicating whether or not text is to be
%		drawn in stippled fashion.  If text is stippled,
%		procedure StippleText must have been defined to call
%		StippleFill in the right way.
%
% Also, when this procedure is invoked, the color and font must already
% have been set for the text.

/DrawText {
    /stipple exch def
    /justify exch def
    /yoffset exch def
    /xoffset exch def
    /spacing exch def
    /strings exch def

    % First scan through all of the text to find the widest line.

    /lineLength 0 def
    strings {
	stringwidth pop
	dup lineLength gt {/lineLength exch def} {pop} ifelse
	newpath
    } forall

    % Compute the baseline offset and the actual font height.

    0 0 moveto (TXygqPZ) false charpath
    pathbbox dup /baseline exch def
    exch pop exch sub /height exch def pop
    newpath

    % Translate coordinates first so that the origin is at the upper-left
    % corner of the text's bounding box. Remember that x and y for
    % positioning are still on the stack.

    translate
    lineLength xoffset mul
    strings length 1 sub spacing mul height add yoffset mul translate

    % Now use the baseline and justification information to translate so
    % that the origin is at the baseline and positioning point for the
    % first line of text.

    justify lineLength mul baseline neg translate

    % Iterate over each of the lines to output it.  For each line,
    % compute its width again so it can be properly justified, then
    % display it.

    strings {
	dup stringwidth pop
	justify neg mul 0 moveto
	stipple {

	    % The text is stippled, so turn it into a path and print
	    % by calling StippledText, which in turn calls StippleFill.
	    % Unfortunately, many Postscript interpreters will get
	    % overflow errors if we try to do the whole string at
	    % once, so do it a character at a time.

	    gsave
	    /char (X) def
	    {
		char 0 3 -1 roll put
		currentpoint
		gsave
		char true charpath clip StippleText
		grestore
		char stringwidth translate
		moveto
	    } forall
	    grestore
	} {show} ifelse
	0 spacing neg translate
    } forall
} bind def

%%EndProlog
%%BeginSetup
/CL 2 def
%%IncludeResource: font Times-Italic
%%EndSetup

%%Page: 1 1
save
0.0 792.0 translate
0.7197 0.7197 scale
0 -207 translate
0 207 moveto 335 207 lineto 335 0 lineto 0 0 lineto closepath clip newpath
gsave
matrix currentmatrix
161 68 translate 60 20 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
0.000 0.000 0.000 setrgbcolor AdjustColor
clip 32 32 <5555555555555555aaaaaaaaaaaaaaaa5555555555555555aaaaaaaaaaaa
aaaa5555555555555555aaaaaaaaaaaaaaaa5555555555555555aaaaaaaa
aaaaaaaa5555555555555555aaaaaaaaaaaaaaaa5555555555555555aaaa
aaaaaaaaaaaa5555555555555555aaaaaaaaaaaaaaaa5555555555555555
aaaaaaaaaaaaaaaa> StippleFill
grestore gsave
matrix currentmatrix
161 68 translate 60 20 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
2 setlinewidth 0 setlinejoin 2 setlinecap
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
211 57 moveto
231.081720951879 47.1721420760348 lineto
4 setlinewidth
0 setlinecap
1 setlinejoin
0.647 0.165 0.165 setrgbcolor AdjustColor
stroke
239.165795459 43.215850885 moveto
226.514242559035 58.3151956131461 lineto
227.918442150746 50.9468910706563 lineto
226.160139358135 47.3540688805813 lineto
219.480152237194 43.9421104417509 lineto
239.165795459 43.215850885 lineto
fill
grestore
gsave
231 47 moveto
252 38 lineto
4 setlinewidth
0 setlinecap
1 setlinejoin
0.647 0.165 0.165 setrgbcolor AdjustColor
stroke
grestore
gsave
69 39 moveto
89.081720951879 48.8278579239652 lineto
4 setlinewidth
0 setlinecap
1 setlinejoin
0.647 0.165 0.165 setrgbcolor AdjustColor
stroke
97.1657954590002 52.7841491149999 moveto
77.4801522371944 52.0578895582491 lineto
84.1601393581348 48.6459311194187 lineto
85.918442150746 45.0531089293437 lineto
84.5142425590354 37.6848043868538 lineto
97.1657954590002 52.7841491149999 lineto
fill
grestore
gsave
89 49 moveto
110 58 lineto
4 setlinewidth
0 setlinecap
1 setlinejoin
0.647 0.165 0.165 setrgbcolor AdjustColor
stroke
grestore
gsave
110 77 moveto
120.161791704436 105.366562255321 lineto
2 setlinewidth
0 setlinecap
1 setlinejoin
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
122.050458379 110.638760541 moveto
113.295154715083 101.027378759352 lineto
118.141001817848 102.690746030117 lineto
120.023835620538 102.016255947576 lineto
122.711206562337 97.6542538565619 lineto
122.050458379 110.638760541 lineto
fill
grestore
gsave
120 105 moveto
130 132 lineto
2 setlinewidth
0 setlinecap
1 setlinejoin
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
130 132 moveto
160.398908396902 131.915568359291 lineto
2 setlinewidth
0 setlinecap
1 setlinejoin
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
165.99916684 131.900013886 moveto
154.012103134728 136.934326721507 lineto
157.201138199433 132.924453883509 lineto
157.195583308188 130.924461597728 lineto
153.984323123615 126.932365300317 lineto
165.99916684 131.900013886 lineto
fill
grestore
gsave
160 132 moveto
190 131 lineto
2 setlinewidth
0 setlinecap
1 setlinejoin
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
191 132 moveto
201.161791704436 103.633437744679 lineto
2 setlinewidth
0 setlinecap
1 setlinejoin
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
203.050458379 98.361239459 moveto
203.711206562337 111.345746143438 lineto
201.023835620538 106.983744052424 lineto
199.141001817848 106.309253969883 lineto
194.295154715083 107.972621240648 lineto
203.050458379 98.361239459 lineto
fill
grestore
gsave
201 104 moveto
211 77 lineto
2 setlinewidth
0 setlinecap
1 setlinejoin
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
matrix currentmatrix
130 132 translate 3 3 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
0.000 0.000 0.000 setrgbcolor AdjustColor
fill
matrix currentmatrix
130 132 translate 3 3 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
1 setlinewidth 0 setlinejoin 2 setlinecap
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
matrix currentmatrix
191 132 translate 2.99999999999999 3 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
0.000 0.000 0.000 setrgbcolor AdjustColor
fill
matrix currentmatrix
191 132 translate 2.99999999999999 3 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
1 setlinewidth 0 setlinejoin 2 setlinecap
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
229 168 moveto
229.572826604834 162.781926184959 228.550318553417 160.247263530979 225.929405251 160.3884004385 curveto
223.308491948583 160.52953734602 220.691508051417 160.670462653979 218.070594749 160.8115995615 curveto
215.449681446583 160.95273646902 214.284181446583 159.72063646902 214.570594749 157.1115995615 curveto
214.857008051417 154.502562653979 215.142991948583 151.89743734602 215.429405251 149.2884004385 curveto
215.715818553417 146.679363530979 214.550318553417 145.447263530979 211.929405251 145.5884004385 curveto
209.308491948583 145.72953734602 206.691508051417 145.87046265398 204.070594749 146.0115995615 curveto
201.449681446583 146.15273646902 200.284181446583 144.92063646902 200.570594749 142.3115995615 curveto
200.857008051417 139.702562653979 201.142991948583 137.09743734602 201.429405251 134.4884004385 curveto
201.715818553417 131.879363530979 199.241826604834 130.717726184959 194 131 curveto
2 setlinewidth
0 setlinecap
1 setlinejoin
0.000 0.000 1.000 setrgbcolor AdjustColor
stroke
grestore
gsave
93 168 moveto
92.427173395166 162.781926184959 93.449681446583 160.247263530979 96.070594749 160.3884004385 curveto
98.691508051417 160.52953734602 101.308491948583 160.670462653979 103.929405251 160.8115995615 curveto
106.550318553417 160.95273646902 107.715818553417 159.72063646902 107.429405251 157.1115995615 curveto
107.142991948583 154.502562653979 106.857008051417 151.89743734602 106.570594749 149.2884004385 curveto
106.284181446583 146.679363530979 107.449681446583 145.447263530979 110.070594749 145.5884004385 curveto
112.691508051417 145.72953734602 115.308491948583 145.87046265398 117.929405251 146.0115995615 curveto
120.550318553417 146.15273646902 121.715818553417 144.92063646902 121.429405251 142.3115995615 curveto
121.142991948583 139.702562653979 120.857008051417 137.09743734602 120.570594749 134.4884004385 curveto
120.284181446583 131.879363530979 122.758173395166 130.717726184959 128 131 curveto
2 setlinewidth
0 setlinecap
1 setlinejoin
0.000 0.000 1.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/Times-Italic findfont 13 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
129 156 [
(0)
] 19 -0 0 0 false DrawText
grestore
gsave
/Times-Italic findfont 17 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
184 161 [
(z)
] 25 -0 0 0 false DrawText
grestore
restore showpage

%%Trailer
end
%%EOF
